version: '2'
services:
  utility-discord-bot:
    image: mikeyaworski/utility-discord-bot:latest
    restart: unless-stopped
    container_name: utility-discord-bot
    volumes:
      - ../.data:/code/.data
    environment:
      ENVIRONMENT: ${ENVIRONMENT}
      PORT: ${PORT}
      PING_HOST: ${PING_HOST}
      DISCORD_BOT_CLIENT_ID: ${DISCORD_BOT_CLIENT_ID}
      DISCORD_BOT_CLIENT_SECRET: ${DISCORD_BOT_CLIENT_SECRET}
      DISCORD_BOT_TOKEN: ${DISCORD_BOT_TOKEN}
      DATABASE_URL: ${DATABASE_URL}
      YOUTUBE_API_KEY: ${YOUTUBE_API_KEY}
      SPOTIFY_CLIENT_ID: ${SPOTIFY_CLIENT_ID}
      SPOTIFY_CLIENT_SECRET: ${SPOTIFY_CLIENT_SECRET}
      OPENAI_SECRET_KEY: ${OPENAI_SECRET_KEY}
      CHATGPT_USER_LIMIT: ${CHATGPT_USER_LIMIT}
      CHATGPT_WHITELIST_USER_LIMIT: ${CHATGPT_WHITELIST_USER_LIMIT}
      CHATGPT_WHITELIST_USER_IDS: ${CHATGPT_WHITELIST_USER_IDS}
      CHATGPT_GUILD_LIMIT: ${CHATGPT_GUILD_LIMIT}
      PLAYER_USER_LIMIT: ${PLAYER_USER_LIMIT}
      PLAYER_GUILD_LIMIT: ${PLAYER_GUILD_LIMIT}
      OMBD_API_KEY: ${OMBD_API_KEY}
      CHATGPT_CONVERSATION_TIME_LIMIT: ${CHATGPT_CONVERSATION_TIME_LIMIT}
      SLASH_COMMANDS_GUILD_ID: ${SLASH_COMMANDS_GUILD_ID}
      WEBHOOK_SECRET: ${WEBHOOK_SECRET}
      UI_ROOT: ${UI_ROOT}
    ports:
      - 3000:3000
    networks:
      - app-network
  http-server:
    image: nginx:mainline-alpine
    container_name: http-server
    restart: unless-stopped
    ports:
      - 80:80
    volumes:
      - webroot:/var/www/html
      - ./nginx-conf-http:/etc/nginx/conf.d
    depends_on:
      - utility-discord-bot
    networks:
      - app-network
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - webroot:/var/www/html
    depends_on:
      - http-server
    command: certonly --webroot --webroot-path=/var/www/html --email michael@mikeyaworski.com --agree-tos --no-eff-email -d api.utilitydiscordbot.com
  # Note: This HTTPS server is separate from the HTTP server, since the HTTP server is used
  # to pass the ACME challenge. After we pass the challenge
  # and certbot generates the SSL certificate, we can start the HTTPS server.
  https-server:
    image: nginx:mainline-alpine
    container_name: https-server
    restart: unless-stopped
    ports:
      - 443:443
    volumes:
      - webroot:/var/www/html
      - ./nginx-conf-https:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./dhparam:/etc/ssl/certs
    depends_on:
      - certbot
    networks:
      - app-network
volumes:
  certbot-etc:
  certbot-var:
  webroot:
    driver: local
    driver_opts:
      type: none
      device: ./
      o: bind
networks:
  app-network:
    driver: bridge
